import os
import re


def create_main_directory():
    print ("Creating project directory...")
    if not os.path.exists(path):
        os.makedirs(path)


def create_gitignore():
    print ("Creating .gitignorep...")
    fn = os.path.join(os.path.dirname(__file__), path, ".gitignore")
    with open(fn, "w") as output_file:
        output_file.write("""# Logs
logs
*.log
npm-debug.log*

# Runtime data
pids
*.pid
*.seed

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# node-waf configuration
.lock-wscript

# Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules"
"jspm_packages

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

# Credentials
credentials.json
credentials.js

# Intellij based IDEs
.idea""")
        output_file.close()


def camel_case(text):
    components = text.split(' ')
    return components[0].lower() + "".join(x.capitalize() for x in components[1:])


def kebab_case(text):
    s1 = re.sub('(.)([A-Z][a-z]+)', r'\1-\2', camel_case(text))
    return re.sub('([a-z0-9])([A-Z])', r'\1-\2', s1).lower()


print ("""This generator will create the base of your
Node.js + Express + Angular 1 project\n""")

print ("""Note: when entering a module name or the project name,
use lowercase words separated by spaces.
Case conversion will take place automatically.""")

project_name = raw_input("\nEnter project name\n")

path = kebab_case(project_name)

create_main_directory()
create_gitignore()
